version: '3.8'

services:
  debits-credits-api:
    build:
      context: .
      dockerfile: Dockerfile
      target: base
      args:
        - NODE_ENV=development
        - DATABASE_URL=postgres://postgres:password@db_postgres:5432/debits-credits
    depends_on:
      - postgres
    env_file:
      - ./src/services/db/.env
    volumes:
      - ./src:/usr/src/app/src
      - /node_modules
    container_name: debits-credits-api
    networks:
      - app-tier
    expose:
      - '3001'
    ports:
      - '3001:3001'
    command: npm run docker:dev

  postgres:
    build:
      context: ./src/services/db
      dockerfile: Dockerfile
    container_name: db_postgres
    user: postgres
    env_file:
      - ./src/services/db/.env
    volumes:
      - ./src/services/db/pgdata:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    restart: always
    networks:
      - app-tier

  cache:
    build:
      context: ./src/services/cache-redis
      dockerfile: Dockerfile
    container_name: cache
    env_file:
      - ./src/services/cache-redis/.env
    environment:
      - REDIS_URL=redis://cache:6379
    ports:
      - "6379:6379"
    expose:
      - 6379
    networks:
      - app-tier
    volumes:
      - ./src/services/cache-redis/cache:/data

  zookeeper:
    image: confluentinc/cp-zookeeper:7.3.0
    hostname: zookeeper
    container_name: zookeeper
    networks:
      - app-tier
    volumes:
      - ./src/services/kafka-client/zookeeper-data/zookeeper_data:/var/lib/zookeeper/data
      - ./src/services/kafka-client/zookeeper-data/zookeeper_log:/var/lib/zookeeper/log
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka-broker:
    image: confluentinc/cp-kafka:7.3.0
    container_name: kafka-broker
    networks:
      - app-tier
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    volumes:
      - ./src/services/kafka-client/data:/var/lib/kafka/data
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
      # KAFKA_ADVERTISED_LISTENERS: http://localhost:9092,http://kafka-broker:9093
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_LISTENERS: LISTENER_BOB://kafka-broker:29092,LISTENER_FRED://localhost:9092
      KAFKA_ADVERTISED_LISTENERS: LISTENER_BOB://kafka-broker:29092,LISTENER_FRED://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: LISTENER_BOB:PLAINTEXT,LISTENER_FRED:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: LISTENER_BOB
      # KAFKA_LISTENERS: EXTERNAL_SAME_HOST://:29092,INTERNAL://:9092
      # KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:9092,EXTERNAL_SAME_HOST://localhost:29092
      # KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL_SAME_HOST:PLAINTEXT
      # KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL

  schema-registry:
    image: confluentinc/cp-schema-registry:5.1.2
    restart: always
    depends_on:
      - zookeeper
    environment:
      SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'kafka-broker:29092'
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_LISTENERS: "http://localhost:8085"
      SCHEMA_REGISTRY_DEBUG: "true"
      ZOOKEEPER_CLIENT_PORT: 2181
    ports:
      - 8085:8085
    networks:
      - app-tier

networks:
  app-tier:
    driver: bridge
  # zookeeper:
  #   image: confluentinc/cp-zookeeper:7.3.2
  #   container_name: zookeeper
  #   environment:
  #     ZOOKEEPER_CLIENT_PORT: 2181
  #     ZOOKEEPER_TICK_TIME: 2000
  #     ZOOKEEPER_SYNC_LIMIT: 2

  # kafka-broker:
  #   image: confluentinc/cp-kafka:7.3.2
  #   container_name: kafka-broker
  #   # user: '0:0'
  #   ports:
  #     - "9092:9092"
  #   depends_on:
  #     - zookeeper
  #   environment:
  #     KAFKA_BROKER_ID: 1
  #     KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_INTERNAL:PLAINTEXT
  #     KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
  #     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_INTERNAL://kafka-broker:29092
  #     KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
  #     KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
  #     KAFKA_SCHEMA_REGISTRY_URL: "schema-registry:8085"
  #     KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
  #     KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1

  # schema-registry:
  #   image: confluentinc/cp-schema-registry:7.0.9
  #   container_name: schema-registry
  #   restart: always
  #   depends_on:
  #     - kafka-broker
  #   environment:
  #     SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: SSL://kafka-broker:29092,SSL://localhost:9092
  #     SCHEMA_REGISTRY_KAFKASTORE_CONNECTION_URL: 'zookeeper:2181'
  #     SCHEMA_REGISTRY_HOST_NAME: schema-registry
  #     SCHEMA_REGISTRY_LISTENERS: 'http://0.0.0.0:8085'
  #     SCHEMA_REGISTRY_DEBUG: true
  #   ports:
  #     - 8085:8085
  # kafka-rest-proxy:
  #   image: confluentinc/cp-kafka-rest:7.0.0
  #   restart: always
  #   depends_on:
  #     - kafka-broker
  #   environment:
  #     KAFKA_REST_ZOOKEEPER_CONNECT: 'zookeeper:2181'
  #     KAFKA_REST_LISTENERS: "http://0.0.0.0:8082"
  #     KAFKA_REST_SCHEMA_REGISTRY_URL: "http://schemaregistry:8085"
  #     KAFKA_REST_HOST_NAME: kafka-rest-proxy
  #     # KAFKA_REST_DEBUG: "true"
  #   ports:
  #     - 8082:8082
